version: 2.1

orbs:
  docker: circleci/docker@3.0.0

# Job definitions
jobs:
  build:
    executor: docker/docker
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - &cache-key v1-libssh2-build-{{ .Branch }}-{{ .Revision }}
            - v1-libssh2-build-{{ .Branch }}-
            - v1-libssh2-build-
      - run:
          name: Set up Docker Buildx context
          command: docker buildx create --name libssh2-builder --use
      - docker/build:
          image: verdigristech/libssh2-wasm
          use_buildkit: true
          extra_build_args:
            --progress=plain
            --cache-from=type=local,src=/tmp/buildx-cache
            --cache-to=type=local,mode=max,dest=/tmp/buildx-cache
            --output=type=tar,dest=libssh2.tar
      - run:
          name: Extract the build output
          command: |
            mkdir -p dist
            tar -xf libssh2.tar -C dist
      - save_cache:
          paths:
            - /tmp/buildx-cache
          key: *cache-key
      - persist_to_workspace:
          root: dist
          paths:
            - libssh2.js
            - libssh2.wasm
            - index.d.ts
      - store_artifacts:
          path: dist

  publish:
    docker:
      - image: cimg/node:22.17
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run:
          name: Set npm token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Build types
          command: npm run build:types
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Publish the build output to npm
                command: |
                  npm publish --access public
      - unless:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Publish the build output to npm (dry-run)
                command: |
                  npm publish --access public --dry-run

# Workflows
workflows:
  release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish:
          context: npmjs.com
          requires:
            - build
          filters:
            branches:
              only: main
            tags:
              only: /.*/
